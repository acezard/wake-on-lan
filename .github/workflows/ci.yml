name: CI Pipeline

on:
  push: {}         # Triggers on push events on any branch
  pull_request: {} # Triggers on pull request events

jobs:
  backend:
    name: Backend Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js (v22)
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install

      - name: Lint Backend Code
        working-directory: ./backend
        run: npm run lint

      - name: Type Check Backend Code
        working-directory: ./backend
        run: npm run type-check

  frontend:
    name: Frontend Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js (v22)
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Lint Frontend Code
        working-directory: ./frontend
        run: npm run lint

      - name: Type Check Frontend Code
        working-directory: ./frontend
        run: npm run type-check

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: npm run test -- --watchAll=false

  deploy:
    name: Deploy to Raspberry Pi
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Clean previous build artifacts
        run: |
          rm -rf ./backend/build ./frontend/build ./backend/logs

      # Create .env files from secrets
      - name: Create backend .env file
        run: echo "${{ secrets.BACKEND_ENV }}" > ./backend/.env

      - name: Create frontend .env file
        run: echo "${{ secrets.FRONTEND_ENV }}" > ./frontend/.env

      - name: Deploy Application
        run: |
          git pull origin main
          chmod +x start.sh
          ./start.sh prod true